## CSE 331 hw-graph Part 2 Questions

NOTE: This file is used as part of hw-graph-part2, and is not due as part of the hw-graph-part1
submission. You may leave it blank for hw-graph-part1.

## Section 1
###########################################################################

A few examples of possible Graph representations:

    A: A collection of edges.
    B: An adjacency list, in which each node is associated with a list of its outgoing edges.
    C: An adjacency matrix, which explicitly represents, for every pair ⟨A,B⟩ of edges, whether there is a link from A to B, and how many.

1. In two or three sentences, explain an advantage and a disadvantage of each of the
representations listed above (for example, in terms of runtime complexity, space
complexity, or ease of implementation).

    Collection of edges runs in O(1) time complexity when it adds a new edge. Similarly, an adjacency list also runs
    in O(1) time complexity when adding new vertexes or adding new edges, as does the Adjacency matrix when adding or
    removing edges.


2. In two to three sentences, describe the representation you chose and explain why you
chose it. If you chose to use a different representation than one of the three we described
above, be sure to list its advantages and disadvantages, too.

    I made it so that each node's outgoing edges would be represented as a treeset while mapping each node to its set
    of edges using a treemap, because TreeMap guarantees a O(logn) performance for operations such as searching,
    inserting, and deletion. Treemap is also more space efficient and TreeSet can be used to sort alphabetically.


## Section 4
###########################################################################

    (Please keep your answers brief and to-the-point.)

1. Describe any new tests you added and why you added them, or why you feel that your original
tests alone are sufficient.

    I didn't add any tests because I felt that my tests were sufficient to test all my methods. I have
    many tests that test my basic operations, and I believe my methods effectively isolate and test what they
    need to test. I'm not too sure what else I should add.


2. Did you make any changes to your specifications as you were implementing your Graph? (yes/no)
If yes, describe your changes and why you made them.

    I just made some very simple changes to make the specification a bit more clear, other than that, no, I
    didn't really change the spec.

